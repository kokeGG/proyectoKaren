{"ast":null,"code":"import { useRef, useEffect, useDebugValue } from 'react';\nimport useMounted from './useMounted';\n\nfunction useCustomEffect(effect, dependencies, isEqualOrOptions) {\n  var isMounted = useMounted();\n\n  var _ref = typeof isEqualOrOptions === 'function' ? {\n    isEqual: isEqualOrOptions\n  } : isEqualOrOptions,\n      isEqual = _ref.isEqual,\n      _ref$effectHook = _ref.effectHook,\n      effectHook = _ref$effectHook === void 0 ? useEffect : _ref$effectHook;\n\n  var dependenciesRef = useRef();\n  dependenciesRef.current = dependencies;\n  var cleanupRef = useRef(null);\n  effectHook(function () {\n    // If the ref the is `null` it's either the first effect or the last effect\n    // ran and was cleared, meaning _this_ update should run, b/c the equality\n    // check failed on in the cleanup of the last effect.\n    if (cleanupRef.current === null) {\n      var cleanup = effect();\n\n      cleanupRef.current = function () {\n        if (isMounted() && isEqual(dependenciesRef.current, dependencies)) {\n          return;\n        }\n\n        cleanupRef.current = null;\n        if (cleanup) cleanup();\n      };\n    }\n\n    return cleanupRef.current;\n  });\n  useDebugValue(effect);\n}\n\nexport default useCustomEffect;","map":{"version":3,"names":["useRef","useEffect","useDebugValue","useMounted","useCustomEffect","effect","dependencies","isEqualOrOptions","isMounted","_ref","isEqual","_ref$effectHook","effectHook","dependenciesRef","current","cleanupRef","cleanup"],"sources":["/home/kokegg/proyectoKaren/node_modules/@restart/hooks/esm/useCustomEffect.js"],"sourcesContent":["import { useRef, useEffect, useDebugValue } from 'react';\nimport useMounted from './useMounted';\n\nfunction useCustomEffect(effect, dependencies, isEqualOrOptions) {\n  var isMounted = useMounted();\n\n  var _ref = typeof isEqualOrOptions === 'function' ? {\n    isEqual: isEqualOrOptions\n  } : isEqualOrOptions,\n      isEqual = _ref.isEqual,\n      _ref$effectHook = _ref.effectHook,\n      effectHook = _ref$effectHook === void 0 ? useEffect : _ref$effectHook;\n\n  var dependenciesRef = useRef();\n  dependenciesRef.current = dependencies;\n  var cleanupRef = useRef(null);\n  effectHook(function () {\n    // If the ref the is `null` it's either the first effect or the last effect\n    // ran and was cleared, meaning _this_ update should run, b/c the equality\n    // check failed on in the cleanup of the last effect.\n    if (cleanupRef.current === null) {\n      var cleanup = effect();\n\n      cleanupRef.current = function () {\n        if (isMounted() && isEqual(dependenciesRef.current, dependencies)) {\n          return;\n        }\n\n        cleanupRef.current = null;\n        if (cleanup) cleanup();\n      };\n    }\n\n    return cleanupRef.current;\n  });\n  useDebugValue(effect);\n}\n\nexport default useCustomEffect;"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,YAAjC,EAA+CC,gBAA/C,EAAiE;EAC/D,IAAIC,SAAS,GAAGL,UAAU,EAA1B;;EAEA,IAAIM,IAAI,GAAG,OAAOF,gBAAP,KAA4B,UAA5B,GAAyC;IAClDG,OAAO,EAAEH;EADyC,CAAzC,GAEPA,gBAFJ;EAAA,IAGIG,OAAO,GAAGD,IAAI,CAACC,OAHnB;EAAA,IAIIC,eAAe,GAAGF,IAAI,CAACG,UAJ3B;EAAA,IAKIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6BV,SAA7B,GAAyCU,eAL1D;;EAOA,IAAIE,eAAe,GAAGb,MAAM,EAA5B;EACAa,eAAe,CAACC,OAAhB,GAA0BR,YAA1B;EACA,IAAIS,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAvB;EACAY,UAAU,CAAC,YAAY;IACrB;IACA;IACA;IACA,IAAIG,UAAU,CAACD,OAAX,KAAuB,IAA3B,EAAiC;MAC/B,IAAIE,OAAO,GAAGX,MAAM,EAApB;;MAEAU,UAAU,CAACD,OAAX,GAAqB,YAAY;QAC/B,IAAIN,SAAS,MAAME,OAAO,CAACG,eAAe,CAACC,OAAjB,EAA0BR,YAA1B,CAA1B,EAAmE;UACjE;QACD;;QAEDS,UAAU,CAACD,OAAX,GAAqB,IAArB;QACA,IAAIE,OAAJ,EAAaA,OAAO;MACrB,CAPD;IAQD;;IAED,OAAOD,UAAU,CAACD,OAAlB;EACD,CAlBS,CAAV;EAmBAZ,aAAa,CAACG,MAAD,CAAb;AACD;;AAED,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}