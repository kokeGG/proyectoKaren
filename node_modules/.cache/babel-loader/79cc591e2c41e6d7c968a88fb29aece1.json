{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _querySelectorAll = _interopRequireDefault(require(\"dom-helpers/querySelectorAll\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _DateTimePartInput = _interopRequireDefault(require(\"./DateTimePartInput\"));\n\nvar _Icon = require(\"./Icon\");\n\nvar _Widget = _interopRequireDefault(require(\"./Widget\"));\n\nvar _dates = _interopRequireDefault(require(\"./dates\"));\n\nvar _useFocusManager = _interopRequireDefault(require(\"./useFocusManager\"));\n\nconst _excluded = [\"value\", \"use12HourClock\", \"padValues\", \"emptyCharacter\", \"precision\", \"noClearButton\", \"hoursAddon\", \"minutesAddon\", \"secondsAddon\", \"millisecondsAddon\", \"className\", \"disabled\", \"readOnly\", \"datePart\", \"onChange\", \"onBlur\", \"onFocus\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst selectTextRange = el => {\n  if (el instanceof HTMLInputElement) return el.select();\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const selection = window.getSelection();\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}; // prettier-ignore\n\n\nconst isEmptyValue = (p, precision) => p.hours == null && p.minutes == null && (precision != 'seconds' && precision !== 'milliseconds' || p.seconds == null) && (precision !== 'milliseconds' || p.milliseconds == null); // prettier-ignore\n\n\nconst isPartialValue = (p, precision) => p.hours == null || p.minutes == null || (precision === 'seconds' || precision === 'milliseconds') && p.seconds == null || precision === 'milliseconds' && p.milliseconds == null;\n\nconst getValueParts = (value, use12HourClock) => {\n  let hours, minutes, seconds, milliseconds;\n  let meridiem = 'AM';\n\n  if (value) {\n    hours = value.getHours();\n\n    if (use12HourClock) {\n      meridiem = hours < 12 ? 'AM' : 'PM';\n      hours = hours % 12 || 12;\n    }\n\n    minutes = value.getMinutes();\n    seconds = value.getSeconds();\n    milliseconds = value.getMilliseconds();\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  };\n};\n\nconst TEST_VALID = {\n  hours: /^([1]?[0-9]|2[0-3])$/,\n  hours12: /^(1[0-2]|0?[1-9])$/,\n  minutes: /^([0-5]?\\d)$/,\n  seconds: /^([0-5]?\\d)$/,\n  milliseconds: /^(\\d{1,3})$/\n};\nconst TEST_COMPLETE = {\n  hours: /^([3-9]|\\d{2})$/,\n  hours12: /^(\\d{2}|[2-9])$/,\n  minutes: /^(d{2}|[6-9])$/,\n  seconds: /^(d{2}|[6-9])$/,\n  milliseconds: /^(\\d{3})$/\n};\n\nfunction testPart(value, part, use12HourClock, tests) {\n  const key = part === 'hours' && use12HourClock ? 'hours12' : part;\n  return tests[key].test(value);\n}\n\nconst isValid = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_VALID);\n\nconst isComplete = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_COMPLETE);\n\nconst propTypes = {\n  /**\n   * @example ['valuePicker', [ ['new Date()'] ]]\n   */\n  value: _propTypes.default.instanceOf(Date),\n\n  /**\n   * @example ['onChangePicker', [ ['new Date()'] ]]\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The default date used to construct a new time when the `value` is empty\n   *\n   * @default new Date()\n   **/\n  datePart: _propTypes.default.instanceOf(Date),\n\n  /**\n   * Use a 12 hour clock (with AM/PM) instead of 24 hour one.\n   * The configured localizer may provide a default value .\n   **/\n  use12HourClock: _propTypes.default.bool,\n\n  /** Time part values will be padded by `0` */\n  padValues: _propTypes.default.bool,\n\n  /** The string character used to pad empty, or cleared values */\n  emptyCharacter: _propTypes.default.string,\n\n  /** Hide the input clear button */\n  noClearButton: _propTypes.default.bool,\n\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: _propTypes.default.bool,\n\n  /** Controls how precise of a time can be input **/\n  precision: _propTypes.default.oneOf(['minutes', 'seconds', 'milliseconds']).isRequired,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  hoursAddon: _propTypes.default.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  minutesAddon: _propTypes.default.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  secondsAddon: _propTypes.default.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default '.'\n   */\n  millisecondsAddon: _propTypes.default.node\n};\nconst defaultProps = {\n  hoursAddon: ':',\n  padValues: true,\n  precision: 'minutes',\n  emptyCharacter: '-'\n}; // let count = 0\n\nfunction useTimePartState(value, use12HourClock) {\n  const [state, setState] = (0, _react.useState)(() => ({\n    value,\n    use12HourClock,\n    timeParts: getValueParts(value, use12HourClock)\n  }));\n  const setTimeParts = (0, _react.useCallback)(timeParts => setState(s => Object.assign({}, s, {\n    timeParts\n  })), [setState]);\n\n  if (state.value !== value || state.use12HourClock !== use12HourClock) {\n    // count++\n    // if (count < 100)\n    setState({\n      value,\n      use12HourClock,\n      timeParts: getValueParts(value, use12HourClock)\n    });\n  }\n\n  return [state.timeParts, setTimeParts];\n}\n\nfunction TimeInput(uncontrolledProps) {\n  const _useUncontrolled = (0, _uncontrollable.useUncontrolled)(uncontrolledProps, {\n    value: 'onChange'\n  }),\n        {\n    value,\n    use12HourClock,\n    padValues: pad,\n    emptyCharacter,\n    precision,\n    noClearButton,\n    hoursAddon,\n    minutesAddon,\n    secondsAddon,\n    millisecondsAddon,\n    className,\n    disabled,\n    readOnly,\n    datePart,\n    onChange,\n    onBlur,\n    onFocus\n  } = _useUncontrolled,\n        props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  let minsAddon = minutesAddon !== undefined ? minutesAddon : precision === 'seconds' || precision === 'milliseconds' ? ':' : '';\n  let secsAddon = secondsAddon !== undefined ? secondsAddon : precision === 'milliseconds' ? ':' : '';\n  const ref = (0, _react.useRef)(null);\n  const hourRef = (0, _react.useRef)(null);\n  const [focusEvents, focused] = (0, _useFocusManager.default)(ref, {\n    disabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle: (focused, e) => {\n      var _hourRef$current;\n\n      if (!focused) return;\n      if (!e.target.dataset.focusable) (_hourRef$current = hourRef.current) == null ? void 0 : _hourRef$current.focus();else select(e.target);\n    }\n  });\n  const [timeParts, setTimeParts] = useTimePartState(value != null ? value : null, use12HourClock != null ? use12HourClock : false);\n\n  function getDatePart() {\n    return _dates.default.startOf(datePart || new Date(), 'day');\n  }\n\n  const getMin = part => part === 'hours' ? 1 : 0;\n\n  const getMax = part => {\n    if (part === 'hours') return use12HourClock ? 12 : 23;\n    if (part === 'milliseconds') return 999;\n    return 59;\n  };\n\n  function select() {\n    let target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.activeElement;\n    window.Promise.resolve().then(() => {\n      if (focused) selectTextRange(target);\n    });\n  }\n  /**\n   * Handlers\n   */\n\n\n  const handleClear = () => {\n    var _hourRef$current2;\n\n    (_hourRef$current2 = hourRef.current) == null ? void 0 : _hourRef$current2.focus();\n    if (value) onChange(null);else setTimeParts(getValueParts(null));\n  };\n\n  const handleChange = (part, event) => {\n    const currentValue = timeParts[part];\n    const {\n      target\n    } = event;\n    const rawValue = target.value;\n    let strValue = `${currentValue || ''}${rawValue}`;\n    let numValue = +strValue;\n\n    if (isNaN(numValue) || strValue && !isValid(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      // the combined value is now past the max or invalid so try the single\n      // digit and \"start over\" filling the value\n      if (isValid(rawValue, part, use12HourClock != null ? use12HourClock : false) && !isNaN(+rawValue)) {\n        // change the effective current value\n        strValue = rawValue;\n        numValue = +rawValue;\n      } else {\n        return event.preventDefault();\n      }\n    }\n\n    const nextValue = target.value ? numValue : null;\n    notifyChange({\n      [part]: nextValue\n    });\n\n    if (nextValue != null && isComplete(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      focusNext(event.currentTarget, +1);\n    } else {\n      select(target);\n    }\n  };\n\n  const handleSelect = _ref => {\n    let {\n      target\n    } = _ref;\n    select(target);\n  };\n\n  const handleKeyDown = (part, event) => {\n    const {\n      key\n    } = event;\n    const input = event.currentTarget;\n    const {\n      selectionStart: start,\n      selectionEnd: end\n    } = input;\n    const isRTL = getComputedStyle(input).getPropertyValue('direction') === 'rtl';\n    const isMeridiem = part === 'meridiem';\n    const isNext = key === (isRTL ? 'ArrowLeft' : 'ArrowRight');\n    const isPrev = key === (isRTL ? 'ArrowRight' : 'ArrowLeft');\n\n    if (key === 'ArrowUp') {\n      event.preventDefault();\n      increment(part, 1);\n    }\n\n    if (key === 'ArrowDown') {\n      event.preventDefault();\n      increment(part, -1);\n    }\n\n    if (isPrev && (isMeridiem || start - 1 < 0)) {\n      event.preventDefault();\n      focusNext(input, -1);\n    }\n\n    if (isNext && (isMeridiem || input.value.length <= end + 1)) {\n      event.preventDefault();\n      focusNext(input, +1);\n    }\n\n    if (readOnly && key !== 'Tab') {\n      event.preventDefault();\n    }\n\n    if (isMeridiem) {\n      if (key === 'a' || key === 'A') notifyChange({\n        meridiem: 'AM'\n      });\n      if (key === 'p' || key === 'P') notifyChange({\n        meridiem: 'PM'\n      });\n    }\n  };\n\n  const increment = (part, inc) => {\n    let nextPart = timeParts[part];\n\n    if (part === 'meridiem') {\n      nextPart = nextPart === 'AM' ? 'PM' : 'AM';\n    } else {\n      nextPart = (nextPart || 0) + inc;\n      if (!isValid(String(nextPart), part, use12HourClock != null ? use12HourClock : false)) return;\n    }\n\n    notifyChange({\n      [part]: nextPart\n    });\n    select();\n  };\n\n  function notifyChange(updates) {\n    const nextTimeParts = Object.assign({}, timeParts, updates);\n\n    if (value && isEmptyValue(nextTimeParts, precision)) {\n      return onChange(null);\n    }\n\n    if (isPartialValue(nextTimeParts, precision)) return setTimeParts(nextTimeParts);\n    let {\n      hours,\n      minutes,\n      seconds,\n      milliseconds,\n      meridiem\n    } = nextTimeParts;\n    let nextDate = new Date(value || getDatePart());\n\n    if (use12HourClock) {\n      if (hours === 12) hours = 0;\n      hours += meridiem === 'PM' ? 12 : 0;\n    }\n\n    nextDate.setHours(hours);\n    nextDate.setMinutes(minutes);\n    if (seconds != null) nextDate.setSeconds(seconds);\n    if (milliseconds != null) nextDate.setMilliseconds(milliseconds);\n    onChange(nextDate, {\n      lastValue: value,\n      timeParts\n    });\n  }\n\n  function focusNext(input, delta) {\n    let nodes = (0, _querySelectorAll.default)(ref.current, '* [data-focusable]');\n    let next = nodes[nodes.indexOf(input) + delta];\n    next == null ? void 0 : next.focus();\n    select(next);\n  }\n\n  const {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  } = timeParts;\n  const showClear = !isEmptyValue(timeParts, precision);\n  return /*#__PURE__*/_react.default.createElement(_Widget.default, _extends({}, props, {\n    role: \"group\",\n    ref: ref\n  }, focusEvents, {\n    focused: focused,\n    disabled: disabled,\n    readOnly: readOnly,\n    className: (0, _classnames.default)(className, 'rw-time-input rw-widget-input')\n  }), /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: hours,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"hours\",\n    min: getMin('hours'),\n    max: getMax('hours'),\n    ref: hourRef,\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('hours', e),\n    onKeyDown: e => handleKeyDown('hours', e)\n  }), hoursAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, hoursAddon), /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: minutes,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"minutes\",\n    min: getMin('minutes'),\n    max: getMax('minutes'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('minutes', e),\n    onKeyDown: e => handleKeyDown('minutes', e)\n  }), minsAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, minsAddon), (precision === 'seconds' || precision === 'milliseconds') && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: seconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"seconds\",\n    min: getMin('seconds'),\n    max: getMax('seconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('seconds', e),\n    onKeyDown: e => handleKeyDown('seconds', e)\n  }), secsAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, secsAddon)), precision === 'milliseconds' && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 3,\n    pad: pad ? 3 : undefined,\n    value: milliseconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"milliseconds\",\n    min: getMin('milliseconds'),\n    max: getMax('milliseconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('milliseconds', e),\n    onKeyDown: e => handleKeyDown('milliseconds', e)\n  }), millisecondsAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, millisecondsAddon)), use12HourClock && /*#__PURE__*/_react.default.createElement(\"div\", {\n    role: \"listbox\",\n    \"aria-label\": \"AM/PM\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    className: \"rw-time-part-meridiem\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-focusable\": true,\n    role: \"option\",\n    \"aria-atomic\": true,\n    \"aria-selected\": true,\n    \"aria-setsize\": 2,\n    \"aria-live\": \"assertive\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    \"aria-posinset\": meridiem === 'AM' ? 1 : 2,\n    tabIndex: !disabled ? 0 : void 0,\n    onFocus: handleSelect,\n    onSelect: handleSelect,\n    onKeyDown: e => handleKeyDown('meridiem', e)\n  }, /*#__PURE__*/_react.default.createElement(\"abbr\", null, meridiem))), !noClearButton && /*#__PURE__*/_react.default.createElement(_Button.default, {\n    label: 'clear input',\n    onClick: handleClear,\n    disabled: disabled || readOnly,\n    className: (0, _classnames.default)('rw-time-input-clear', showClear && 'rw-show')\n  }, _Icon.times));\n}\n\nTimeInput.propTypes = propTypes;\nTimeInput.defaultProps = defaultProps;\nvar _default = TimeInput;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","_classnames","_interopRequireDefault","require","_querySelectorAll","_propTypes","_react","_interopRequireWildcard","_uncontrollable","_Button","_DateTimePartInput","_Icon","_Widget","_dates","_useFocusManager","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","target","i","arguments","length","source","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","selectTextRange","el","HTMLInputElement","select","range","document","createRange","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","isEmptyValue","p","precision","hours","minutes","seconds","milliseconds","isPartialValue","getValueParts","value","use12HourClock","meridiem","getHours","getMinutes","getSeconds","getMilliseconds","TEST_VALID","hours12","TEST_COMPLETE","testPart","part","tests","test","isValid","isComplete","propTypes","instanceOf","Date","onChange","func","datePart","bool","padValues","emptyCharacter","string","noClearButton","disabled","readOnly","oneOf","isRequired","hoursAddon","node","minutesAddon","secondsAddon","millisecondsAddon","defaultProps","useTimePartState","state","setState","useState","timeParts","setTimeParts","useCallback","s","TimeInput","uncontrolledProps","_useUncontrolled","useUncontrolled","pad","className","onBlur","onFocus","props","minsAddon","undefined","secsAddon","ref","useRef","hourRef","focusEvents","focused","didHandle","e","_hourRef$current","dataset","focusable","current","focus","getDatePart","startOf","getMin","getMax","activeElement","Promise","resolve","then","handleClear","_hourRef$current2","handleChange","event","currentValue","rawValue","strValue","numValue","isNaN","preventDefault","nextValue","notifyChange","focusNext","currentTarget","handleSelect","handleKeyDown","input","selectionStart","start","selectionEnd","end","isRTL","getComputedStyle","getPropertyValue","isMeridiem","isNext","isPrev","increment","inc","nextPart","String","updates","nextTimeParts","nextDate","setHours","setMinutes","setSeconds","setMilliseconds","lastValue","delta","nodes","next","showClear","createElement","role","size","min","max","emptyChar","onSelect","onKeyDown","Fragment","tabIndex","label","onClick","times","_default"],"sources":["/home/kokegg/proyectoKaren/node_modules/react-widgets/cjs/TimeInput.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _querySelectorAll = _interopRequireDefault(require(\"dom-helpers/querySelectorAll\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _DateTimePartInput = _interopRequireDefault(require(\"./DateTimePartInput\"));\n\nvar _Icon = require(\"./Icon\");\n\nvar _Widget = _interopRequireDefault(require(\"./Widget\"));\n\nvar _dates = _interopRequireDefault(require(\"./dates\"));\n\nvar _useFocusManager = _interopRequireDefault(require(\"./useFocusManager\"));\n\nconst _excluded = [\"value\", \"use12HourClock\", \"padValues\", \"emptyCharacter\", \"precision\", \"noClearButton\", \"hoursAddon\", \"minutesAddon\", \"secondsAddon\", \"millisecondsAddon\", \"className\", \"disabled\", \"readOnly\", \"datePart\", \"onChange\", \"onBlur\", \"onFocus\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst selectTextRange = el => {\n  if (el instanceof HTMLInputElement) return el.select();\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const selection = window.getSelection();\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}; // prettier-ignore\n\n\nconst isEmptyValue = (p, precision) => p.hours == null && p.minutes == null && (precision != 'seconds' && precision !== 'milliseconds' || p.seconds == null) && (precision !== 'milliseconds' || p.milliseconds == null); // prettier-ignore\n\n\nconst isPartialValue = (p, precision) => p.hours == null || p.minutes == null || (precision === 'seconds' || precision === 'milliseconds') && p.seconds == null || precision === 'milliseconds' && p.milliseconds == null;\n\nconst getValueParts = (value, use12HourClock) => {\n  let hours, minutes, seconds, milliseconds;\n  let meridiem = 'AM';\n\n  if (value) {\n    hours = value.getHours();\n\n    if (use12HourClock) {\n      meridiem = hours < 12 ? 'AM' : 'PM';\n      hours = hours % 12 || 12;\n    }\n\n    minutes = value.getMinutes();\n    seconds = value.getSeconds();\n    milliseconds = value.getMilliseconds();\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  };\n};\n\nconst TEST_VALID = {\n  hours: /^([1]?[0-9]|2[0-3])$/,\n  hours12: /^(1[0-2]|0?[1-9])$/,\n  minutes: /^([0-5]?\\d)$/,\n  seconds: /^([0-5]?\\d)$/,\n  milliseconds: /^(\\d{1,3})$/\n};\nconst TEST_COMPLETE = {\n  hours: /^([3-9]|\\d{2})$/,\n  hours12: /^(\\d{2}|[2-9])$/,\n  minutes: /^(d{2}|[6-9])$/,\n  seconds: /^(d{2}|[6-9])$/,\n  milliseconds: /^(\\d{3})$/\n};\n\nfunction testPart(value, part, use12HourClock, tests) {\n  const key = part === 'hours' && use12HourClock ? 'hours12' : part;\n  return tests[key].test(value);\n}\n\nconst isValid = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_VALID);\n\nconst isComplete = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_COMPLETE);\n\nconst propTypes = {\n  /**\n   * @example ['valuePicker', [ ['new Date()'] ]]\n   */\n  value: _propTypes.default.instanceOf(Date),\n\n  /**\n   * @example ['onChangePicker', [ ['new Date()'] ]]\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The default date used to construct a new time when the `value` is empty\n   *\n   * @default new Date()\n   **/\n  datePart: _propTypes.default.instanceOf(Date),\n\n  /**\n   * Use a 12 hour clock (with AM/PM) instead of 24 hour one.\n   * The configured localizer may provide a default value .\n   **/\n  use12HourClock: _propTypes.default.bool,\n\n  /** Time part values will be padded by `0` */\n  padValues: _propTypes.default.bool,\n\n  /** The string character used to pad empty, or cleared values */\n  emptyCharacter: _propTypes.default.string,\n\n  /** Hide the input clear button */\n  noClearButton: _propTypes.default.bool,\n\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: _propTypes.default.bool,\n\n  /** Controls how precise of a time can be input **/\n  precision: _propTypes.default.oneOf(['minutes', 'seconds', 'milliseconds']).isRequired,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  hoursAddon: _propTypes.default.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  minutesAddon: _propTypes.default.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  secondsAddon: _propTypes.default.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default '.'\n   */\n  millisecondsAddon: _propTypes.default.node\n};\nconst defaultProps = {\n  hoursAddon: ':',\n  padValues: true,\n  precision: 'minutes',\n  emptyCharacter: '-'\n};\n\n// let count = 0\nfunction useTimePartState(value, use12HourClock) {\n  const [state, setState] = (0, _react.useState)(() => ({\n    value,\n    use12HourClock,\n    timeParts: getValueParts(value, use12HourClock)\n  }));\n  const setTimeParts = (0, _react.useCallback)(timeParts => setState(s => Object.assign({}, s, {\n    timeParts\n  })), [setState]);\n\n  if (state.value !== value || state.use12HourClock !== use12HourClock) {\n    // count++\n    // if (count < 100)\n    setState({\n      value,\n      use12HourClock,\n      timeParts: getValueParts(value, use12HourClock)\n    });\n  }\n\n  return [state.timeParts, setTimeParts];\n}\n\nfunction TimeInput(uncontrolledProps) {\n  const _useUncontrolled = (0, _uncontrollable.useUncontrolled)(uncontrolledProps, {\n    value: 'onChange'\n  }),\n        {\n    value,\n    use12HourClock,\n    padValues: pad,\n    emptyCharacter,\n    precision,\n    noClearButton,\n    hoursAddon,\n    minutesAddon,\n    secondsAddon,\n    millisecondsAddon,\n    className,\n    disabled,\n    readOnly,\n    datePart,\n    onChange,\n    onBlur,\n    onFocus\n  } = _useUncontrolled,\n        props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  let minsAddon = minutesAddon !== undefined ? minutesAddon : precision === 'seconds' || precision === 'milliseconds' ? ':' : '';\n  let secsAddon = secondsAddon !== undefined ? secondsAddon : precision === 'milliseconds' ? ':' : '';\n  const ref = (0, _react.useRef)(null);\n  const hourRef = (0, _react.useRef)(null);\n  const [focusEvents, focused] = (0, _useFocusManager.default)(ref, {\n    disabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle: (focused, e) => {\n      var _hourRef$current;\n\n      if (!focused) return;\n      if (!e.target.dataset.focusable) (_hourRef$current = hourRef.current) == null ? void 0 : _hourRef$current.focus();else select(e.target);\n    }\n  });\n  const [timeParts, setTimeParts] = useTimePartState(value != null ? value : null, use12HourClock != null ? use12HourClock : false);\n\n  function getDatePart() {\n    return _dates.default.startOf(datePart || new Date(), 'day');\n  }\n\n  const getMin = part => part === 'hours' ? 1 : 0;\n\n  const getMax = part => {\n    if (part === 'hours') return use12HourClock ? 12 : 23;\n    if (part === 'milliseconds') return 999;\n    return 59;\n  };\n\n  function select(target = document.activeElement) {\n    window.Promise.resolve().then(() => {\n      if (focused) selectTextRange(target);\n    });\n  }\n  /**\n   * Handlers\n   */\n\n\n  const handleClear = () => {\n    var _hourRef$current2;\n\n    (_hourRef$current2 = hourRef.current) == null ? void 0 : _hourRef$current2.focus();\n    if (value) onChange(null);else setTimeParts(getValueParts(null));\n  };\n\n  const handleChange = (part, event) => {\n    const currentValue = timeParts[part];\n    const {\n      target\n    } = event;\n    const rawValue = target.value;\n    let strValue = `${currentValue || ''}${rawValue}`;\n    let numValue = +strValue;\n\n    if (isNaN(numValue) || strValue && !isValid(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      // the combined value is now past the max or invalid so try the single\n      // digit and \"start over\" filling the value\n      if (isValid(rawValue, part, use12HourClock != null ? use12HourClock : false) && !isNaN(+rawValue)) {\n        // change the effective current value\n        strValue = rawValue;\n        numValue = +rawValue;\n      } else {\n        return event.preventDefault();\n      }\n    }\n\n    const nextValue = target.value ? numValue : null;\n    notifyChange({\n      [part]: nextValue\n    });\n\n    if (nextValue != null && isComplete(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      focusNext(event.currentTarget, +1);\n    } else {\n      select(target);\n    }\n  };\n\n  const handleSelect = ({\n    target\n  }) => {\n    select(target);\n  };\n\n  const handleKeyDown = (part, event) => {\n    const {\n      key\n    } = event;\n    const input = event.currentTarget;\n    const {\n      selectionStart: start,\n      selectionEnd: end\n    } = input;\n    const isRTL = getComputedStyle(input).getPropertyValue('direction') === 'rtl';\n    const isMeridiem = part === 'meridiem';\n    const isNext = key === (isRTL ? 'ArrowLeft' : 'ArrowRight');\n    const isPrev = key === (isRTL ? 'ArrowRight' : 'ArrowLeft');\n\n    if (key === 'ArrowUp') {\n      event.preventDefault();\n      increment(part, 1);\n    }\n\n    if (key === 'ArrowDown') {\n      event.preventDefault();\n      increment(part, -1);\n    }\n\n    if (isPrev && (isMeridiem || start - 1 < 0)) {\n      event.preventDefault();\n      focusNext(input, -1);\n    }\n\n    if (isNext && (isMeridiem || input.value.length <= end + 1)) {\n      event.preventDefault();\n      focusNext(input, +1);\n    }\n\n    if (readOnly && key !== 'Tab') {\n      event.preventDefault();\n    }\n\n    if (isMeridiem) {\n      if (key === 'a' || key === 'A') notifyChange({\n        meridiem: 'AM'\n      });\n      if (key === 'p' || key === 'P') notifyChange({\n        meridiem: 'PM'\n      });\n    }\n  };\n\n  const increment = (part, inc) => {\n    let nextPart = timeParts[part];\n\n    if (part === 'meridiem') {\n      nextPart = nextPart === 'AM' ? 'PM' : 'AM';\n    } else {\n      nextPart = (nextPart || 0) + inc;\n      if (!isValid(String(nextPart), part, use12HourClock != null ? use12HourClock : false)) return;\n    }\n\n    notifyChange({\n      [part]: nextPart\n    });\n    select();\n  };\n\n  function notifyChange(updates) {\n    const nextTimeParts = Object.assign({}, timeParts, updates);\n\n    if (value && isEmptyValue(nextTimeParts, precision)) {\n      return onChange(null);\n    }\n\n    if (isPartialValue(nextTimeParts, precision)) return setTimeParts(nextTimeParts);\n    let {\n      hours,\n      minutes,\n      seconds,\n      milliseconds,\n      meridiem\n    } = nextTimeParts;\n    let nextDate = new Date(value || getDatePart());\n\n    if (use12HourClock) {\n      if (hours === 12) hours = 0;\n      hours += meridiem === 'PM' ? 12 : 0;\n    }\n\n    nextDate.setHours(hours);\n    nextDate.setMinutes(minutes);\n    if (seconds != null) nextDate.setSeconds(seconds);\n    if (milliseconds != null) nextDate.setMilliseconds(milliseconds);\n    onChange(nextDate, {\n      lastValue: value,\n      timeParts\n    });\n  }\n\n  function focusNext(input, delta) {\n    let nodes = (0, _querySelectorAll.default)(ref.current, '* [data-focusable]');\n    let next = nodes[nodes.indexOf(input) + delta];\n    next == null ? void 0 : next.focus();\n    select(next);\n  }\n\n  const {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  } = timeParts;\n  const showClear = !isEmptyValue(timeParts, precision);\n  return /*#__PURE__*/_react.default.createElement(_Widget.default, _extends({}, props, {\n    role: \"group\",\n    ref: ref\n  }, focusEvents, {\n    focused: focused,\n    disabled: disabled,\n    readOnly: readOnly,\n    className: (0, _classnames.default)(className, 'rw-time-input rw-widget-input')\n  }), /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: hours,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"hours\",\n    min: getMin('hours'),\n    max: getMax('hours'),\n    ref: hourRef,\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('hours', e),\n    onKeyDown: e => handleKeyDown('hours', e)\n  }), hoursAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, hoursAddon), /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: minutes,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"minutes\",\n    min: getMin('minutes'),\n    max: getMax('minutes'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('minutes', e),\n    onKeyDown: e => handleKeyDown('minutes', e)\n  }), minsAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, minsAddon), (precision === 'seconds' || precision === 'milliseconds') && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: seconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"seconds\",\n    min: getMin('seconds'),\n    max: getMax('seconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('seconds', e),\n    onKeyDown: e => handleKeyDown('seconds', e)\n  }), secsAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, secsAddon)), precision === 'milliseconds' && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_DateTimePartInput.default, {\n    size: 3,\n    pad: pad ? 3 : undefined,\n    value: milliseconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"milliseconds\",\n    min: getMin('milliseconds'),\n    max: getMax('milliseconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('milliseconds', e),\n    onKeyDown: e => handleKeyDown('milliseconds', e)\n  }), millisecondsAddon && /*#__PURE__*/_react.default.createElement(\"span\", null, millisecondsAddon)), use12HourClock && /*#__PURE__*/_react.default.createElement(\"div\", {\n    role: \"listbox\",\n    \"aria-label\": \"AM/PM\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    className: \"rw-time-part-meridiem\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-focusable\": true,\n    role: \"option\",\n    \"aria-atomic\": true,\n    \"aria-selected\": true,\n    \"aria-setsize\": 2,\n    \"aria-live\": \"assertive\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    \"aria-posinset\": meridiem === 'AM' ? 1 : 2,\n    tabIndex: !disabled ? 0 : void 0,\n    onFocus: handleSelect,\n    onSelect: handleSelect,\n    onKeyDown: e => handleKeyDown('meridiem', e)\n  }, /*#__PURE__*/_react.default.createElement(\"abbr\", null, meridiem))), !noClearButton && /*#__PURE__*/_react.default.createElement(_Button.default, {\n    label: 'clear input',\n    onClick: handleClear,\n    disabled: disabled || readOnly,\n    className: (0, _classnames.default)('rw-time-input-clear', showClear && 'rw-show')\n  }, _Icon.times));\n}\n\nTimeInput.propTypes = propTypes;\nTimeInput.defaultProps = defaultProps;\nvar _default = TimeInput;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}