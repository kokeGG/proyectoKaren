{"ast":null,"code":"import { useState } from 'react';\nimport useFocusManagerBase from '@restart/hooks/useFocusManager';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMounted from '@restart/hooks/useMounted';\nimport matches from 'dom-helpers/matches';\n\nconst isInDisabledFieldset = node => {\n  return !!node && matches(node, 'fieldset[disabled] *');\n};\n\nexport default function useFocusManager(ref) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const isMounted = useMounted();\n  const [focused, setFocus] = useState(false);\n  const isDisabled = useEventCallback(() => props.disabled === true || isInDisabledFieldset(ref.current));\n  const events = useFocusManagerBase(Object.assign({}, opts, {\n    isDisabled,\n    onChange: focused => {\n      if (isMounted()) setFocus(focused);\n    },\n\n    didHandle(focused, event) {\n      let handler = props[focused ? 'onFocus' : 'onBlur'];\n      if (handler) handler(event); // @ts-ignore used by work\n\n      if (opts.didHandle && !event.isWidgetDefaultPrevented) opts.didHandle(focused, event);\n    }\n\n  }));\n  return [events, focused, setFocus];\n}","map":{"version":3,"names":["useState","useFocusManagerBase","useEventCallback","useMounted","matches","isInDisabledFieldset","node","useFocusManager","ref","props","opts","isMounted","focused","setFocus","isDisabled","disabled","current","events","Object","assign","onChange","didHandle","event","handler","isWidgetDefaultPrevented"],"sources":["/home/kokegg/proyectoKaren/node_modules/react-widgets/esm/useFocusManager.js"],"sourcesContent":["import { useState } from 'react';\nimport useFocusManagerBase from '@restart/hooks/useFocusManager';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMounted from '@restart/hooks/useMounted';\nimport matches from 'dom-helpers/matches';\n\nconst isInDisabledFieldset = node => {\n  return !!node && matches(node, 'fieldset[disabled] *');\n};\n\nexport default function useFocusManager(ref, props = {}, opts = {}) {\n  const isMounted = useMounted();\n  const [focused, setFocus] = useState(false);\n  const isDisabled = useEventCallback(() => props.disabled === true || isInDisabledFieldset(ref.current));\n  const events = useFocusManagerBase(Object.assign({}, opts, {\n    isDisabled,\n    onChange: focused => {\n      if (isMounted()) setFocus(focused);\n    },\n\n    didHandle(focused, event) {\n      let handler = props[focused ? 'onFocus' : 'onBlur'];\n      if (handler) handler(event); // @ts-ignore used by work\n\n      if (opts.didHandle && !event.isWidgetDefaultPrevented) opts.didHandle(focused, event);\n    }\n\n  }));\n  return [events, focused, setFocus];\n}"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,oBAAoB,GAAGC,IAAI,IAAI;EACnC,OAAO,CAAC,CAACA,IAAF,IAAUF,OAAO,CAACE,IAAD,EAAO,sBAAP,CAAxB;AACD,CAFD;;AAIA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAAqD;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAClE,MAAMC,SAAS,GAAGR,UAAU,EAA5B;EACA,MAAM,CAACS,OAAD,EAAUC,QAAV,IAAsBb,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMc,UAAU,GAAGZ,gBAAgB,CAAC,MAAMO,KAAK,CAACM,QAAN,KAAmB,IAAnB,IAA2BV,oBAAoB,CAACG,GAAG,CAACQ,OAAL,CAAtD,CAAnC;EACA,MAAMC,MAAM,GAAGhB,mBAAmB,CAACiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,IAAlB,EAAwB;IACzDI,UADyD;IAEzDM,QAAQ,EAAER,OAAO,IAAI;MACnB,IAAID,SAAS,EAAb,EAAiBE,QAAQ,CAACD,OAAD,CAAR;IAClB,CAJwD;;IAMzDS,SAAS,CAACT,OAAD,EAAUU,KAAV,EAAiB;MACxB,IAAIC,OAAO,GAAGd,KAAK,CAACG,OAAO,GAAG,SAAH,GAAe,QAAvB,CAAnB;MACA,IAAIW,OAAJ,EAAaA,OAAO,CAACD,KAAD,CAAP,CAFW,CAEK;;MAE7B,IAAIZ,IAAI,CAACW,SAAL,IAAkB,CAACC,KAAK,CAACE,wBAA7B,EAAuDd,IAAI,CAACW,SAAL,CAAeT,OAAf,EAAwBU,KAAxB;IACxD;;EAXwD,CAAxB,CAAD,CAAlC;EAcA,OAAO,CAACL,MAAD,EAASL,OAAT,EAAkBC,QAAlB,CAAP;AACD"},"metadata":{},"sourceType":"module"}